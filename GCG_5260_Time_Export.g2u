Program.Sub.ScreenSU.Start
Gui.Form..Create
Gui.Form..Caption("Time Attendance Export (After Daily Balancing)")
Gui.Form..Size(9195,13530)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..BackColor(-2147483633)
Gui.Form..MousePointer(0)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form.dtpStart.Create(DatePicker)
Gui.Form.dtpStart.Size(1935,285)
Gui.Form.dtpStart.Position(210,1050)
Gui.Form.dtpStart.Enabled(False)
Gui.Form.dtpEnd.Create(DatePicker)
Gui.Form.dtpEnd.Size(1935,285)
Gui.Form.dtpEnd.Position(2340,1050)
Gui.Form.dtpEnd.Enabled(False)
Gui.Form.lblStart.Create(Label,"Monday",True,1080,255,0,210,825,True,0,"Arial",8,-2147483633,0)
Gui.Form.lblEnd.Create(Label,"Sunday",True,1245,255,0,2340,825,True,0,"Arial",8,-2147483633,0)
Gui.Form.cmdOK.Create(Button)
Gui.Form.cmdOK.Size(855,375)
Gui.Form.cmdOK.Position(210,2205)
Gui.Form.cmdOK.Caption("OK")
Gui.Form.cmdOK.Event(Click,cmdOK_Click)
Gui.Form.txtExportFolder.Create(TextBox,"",True,6615,300,0,210,1785,True,0,"Arial",8,-2147483643,1)
Gui.Form.lbl3.Create(Label,"Export Folder",True,1545,255,0,210,1560,True,0,"Arial",8,-2147483633,0)
Gui.Form.cmdBrowseExportFolder.Create(Button)
Gui.Form.cmdBrowseExportFolder.Size(855,375)
Gui.Form.cmdBrowseExportFolder.Position(6945,1740)
Gui.Form.cmdBrowseExportFolder.Caption("^")
Gui.Form.cmdBrowseExportFolder.Event(Click,cmdBrowseExportFolder_Click)
Gui.Form.lbl4.Create(Label,"Select Date",True,1065,255,0,210,120,True,0,"Arial",8,-2147483633,0)
Gui.Form.dtpDateSelected.Create(DatePicker)
Gui.Form.dtpDateSelected.Size(1935,285)
Gui.Form.dtpDateSelected.Position(210,330)
Gui.Form.dtpDateSelected.Event(Change,dtpDateSelected_Change)
Gui.Form.chkMondayBegin.Create(CheckBox)
Gui.Form.chkMondayBegin.Size(3870,360)
Gui.Form.chkMondayBegin.Position(2415,315)
Gui.Form.chkMondayBegin.Caption("Monday is the beginning of the week")
Gui.Form.chkMondayBegin.Value(1)
Gui.Form.chkMondayBegin.Event(Click,chkMondayBegin_Click)
Gui.Form.gsTime.Create(GsGridControl)
Gui.Form.gsTime.Size(8640,9615)
Gui.Form.gsTime.Position(210,2715)
Gui.Form.cmdExport.Create(Button)
Gui.Form.cmdExport.Size(855,375)
Gui.Form.cmdExport.Position(210,12405)
Gui.Form.cmdExport.Caption("Export")
Gui.Form.cmdExport.Event(Click,cmdExport_Click)
Gui.Form.cmdExport.Enabled(False)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.Sub.Preflight.End

Program.Sub.Main.Start
'BN Aug 1, 2019
'This project will export time from V_Job_Detail
'Regular Time: <= 40 hours/week
'Double Time: If work on Sunday and total week time > 40
'Other than above will be 1.5 time

F.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sDefaultfolder.Declare
	v.Local.bExist.Declare

	F.Odbc.Connection!Conx.OpenCompanyConnection
	
	'Default Positive Pay folder that store the csv output file.
	f.Intrinsic.String.Build("{0}\Custom\5260",v.Caller.GlobalDir,v.Local.sDefaultfolder)
	f.Intrinsic.File.DirExists(v.Local.sDefaultfolder,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDefaultfolder)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("{0}\Custom\5260\{1}",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDefaultfolder)
	f.Intrinsic.File.DirExists(v.Local.sDefaultfolder,v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.Intrinsic.File.CreateDir(v.Local.sDefaultfolder)
	f.Intrinsic.Control.EndIf	
	
	gui.Form.txtExportFolder.Text(v.Local.sDefaultfolder)
	f.Intrinsic.Control.CallSub("Get_Monday_Sunday")
	f.Data.DataTable.Create("dtTime",True)
	gui.Form.gsTime.AddGridviewFromDatatable("gvMain","dtTime")
	gui.Form.gsTime.MainView("gvMain")
	gui.Form..Show
	
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
        F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.Unload.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare

	F.Intrinsic.Control.If(V.ODBC.conx.State,=,1)
		F.ODBC.Connection!conx.close
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	Function.Intrinsic.String.Build("Subroutine Error {0}{0}Subroutine: {1}{0}Error Occurred {2} with description {3}",V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End	
F.Intrinsic.Control.EndTry
Program.Sub.Unload.End

Program.Sub.Form_UnLoad.Start
f.Intrinsic.Control.CallSub("Unload")
Program.Sub.Form_UnLoad.End

Program.Sub.cmdBrowseExportFolder_Click.Start
'Browse Export Folder
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sPath.Declare
	
	F.Intrinsic.UI.FolderBrowser("Select Folder for Path",V.Local.sPath)
	f.Intrinsic.Control.If(v.Local.sPath.IsCancel,=,False)
		gui.Form.txtExportFolder.Text(v.Local.sPath)
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	f.Intrinsic.String.Build("Subroutine Error {0}{0}Subroutine: {1}{0}Error Occurred {2} with description {3}",V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End	
F.Intrinsic.Control.EndTry
Program.Sub.cmdBrowseExportFolder_Click.End

Program.Sub.dtpDateSelected_Change.Start
f.Intrinsic.Control.CallSub("Get_Monday_Sunday")
Program.Sub.dtpDateSelected_Change.End

Program.Sub.chkMondayBegin_Click.Start
f.Intrinsic.Control.CallSub("Get_Monday_Sunday")
Program.Sub.chkMondayBegin_Click.End

Program.Sub.Get_Monday_Sunday.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.dEndOfWeek.Declare
	v.Local.dStartOfWeek.Declare
	v.Local.dDateSelected.Declare
	v.Local.iWeekDay.Declare
	
	'Set date selected
	v.Local.dDateSelected.Set(v.Screen.Form!dtpDateSelected.Value)
	
	'If selected Sunday and Monday is the begining of the week
	f.Intrinsic.Date.Weekday(v.Local.dDateSelected,v.Local.iWeekDay)
	f.Intrinsic.Control.If(v.Local.iWeekDay,=,1,and,v.Screen.Form!chkMondayBegin.Value,=,1)
		f.Intrinsic.Date.DateAdd("D",-1,v.Local.dDateSelected,v.Local.dDateSelected)
	f.Intrinsic.Control.EndIf
	
	'Start and end of the week
	f.Intrinsic.Date.EndOfWeek(v.local.dDateSelected,v.Local.dEndOfWeek)
	f.Intrinsic.Date.BeginningOfWeek(v.local.dDateSelected,v.Local.dStartOfWeek)
	
	'Start is Mon, End is Sun
	f.Intrinsic.Date.DateAdd("D",1,v.Local.dEndOfWeek,v.Local.dEndOfWeek)
	f.Intrinsic.Date.DateAdd("D",1,v.Local.dStartOfWeek,v.Local.dStartOfWeek)
	
	f.Intrinsic.Control.If(v.Screen.Form!chkMondayBegin.Value,=,0)
		f.Intrinsic.Date.DateAdd("d",-1,v.Local.dStartOfWeek,v.Local.dStartOfWeek)
		f.Intrinsic.Date.DateAdd("d",-1,v.Local.dEndOfWeek,v.Local.dEndOfWeek)
	f.Intrinsic.Control.EndIf
	
	'Set start and end back to the screen
	gui.Form.dtpStart.Value(v.Local.dStartOfWeek)
	gui.Form.dtpEnd.Value(v.Local.dEndOfWeek)
	
	f.Intrinsic.Control.If(v.Screen.Form!chkMondayBegin.Value,=,0)
		gui.Form.lblStart.Caption("Sunday")
		gui.Form.lblEnd.Caption("Saturday")
	f.Intrinsic.Control.ElseIf(v.Screen.Form!chkMondayBegin.Value,=,1)
		gui.Form.lblStart.Caption("Monday")
		gui.Form.lblEnd.Caption("Sunday")	
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Subroutine called from:{6}{1}Error Occurred: {3}{1}Description: {4}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,v.Ambient.SubroutineCalledFrom,V.Local.sError)
	f.Intrinsic.Control.If(v.Caller.Switches,=,"O")
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("{0}{1}: {0}{2}",v.Ambient.NewLine,v.ambient.Now,v.Local.sError,v.Local.sError)
		f.Intrinsic.File.String2File(v.Global.sLog,v.Local.sError)
	f.Intrinsic.Control.EndIf	
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Get_Monday_Sunday.End

Program.Sub.cmdOK_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sSQL.Declare
	v.Local.dStart.Declare
	v.Local.dEnd.Declare
	
	v.Local.dStart.Set(v.Screen.Form!dtpStart.Value)
	v.Local.dEnd.Set(v.Screen.Form!dtpEnd.Value)
	f.Intrinsic.UI.InvokeWaitDialog("Retrieving data...")
	f.Intrinsic.String.Build("Select j.Empl,e.Name,j.Date_Sequence,round(sum(j.Hours_Worked),2) as Hours_Worked from v_job_detail j inner join v_employee_mstr e on j.empl = e.employee where j.date_sequence between '{0}' and '{1}' group by j.date_sequence,j.Empl,e.Name order by empl,date_sequence",v.Local.dStart.PervasiveDate,v.Local.dEnd.PervasiveDate,v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.dtTime.Exists)
		f.Data.DataTable.Close("dtTime")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtTime","conx",v.Local.sSQL,True)
	f.Intrinsic.Control.If(v.DataTable.dtTime.RowCount,=,0)
		f.Intrinsic.UI.Msgbox("No record found")
		gui.Form.gsTime.ClearRows("gvMain")	
		f.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	gui.Form.gsTime.AddGridviewFromDatatable("gvMain","dtTime")
	
	Gui.Form.gsTime.SetGridViewProperty("gvMain","AllowSort",True)
	Gui.Form.gsTime.SetGridViewProperty("gvMain","AllowFilter",True)
	Gui.Form.gsTime.SetGridViewProperty("gvMain","OptionsFindAlwaysVisible",True)
	Gui.Form.gsTime.SetGridViewProperty("gvMain","EnableAppearanceOddRow",False)
	Gui.Form.gsTime.SetGridViewProperty("gvMain","OptionsViewShowAutoFilterRow",True)	
	
	gui.Form.gsTime.SetColumnProperty("gvMain","Empl","Caption","Employee")
	gui.Form.gsTime.SetColumnProperty("gvMain","Name","Caption","Name")
	gui.Form.gsTime.SetColumnProperty("gvMain","Date_Sequence","Caption","Date")	
	gui.Form.gsTime.SetColumnProperty("gvMain","Hours_Worked","Caption","Hours Worked")
	
	gui.Form.gsTime.SetColumnProperty("gvMain","Empl","Width","50")
	gui.Form.gsTime.SetColumnProperty("gvMain","Name","Width","150")
	gui.Form.gsTime.SetColumnProperty("gvMain","Date_Sequence","Width","80")	
	
	gui.Form.gsTime.SetColumnProperty("gvMain","Date_Sequence","DisplayCustomDatetime","d")
	
	gui.Form.gsTime.SetColumnProperty("gvMain","Hours_Worked","HeaderHAlignment","Far")	
	
	gui.Form.gsTime.AddSummaryItem("gvMain","Hours_Worked","SumHours","Sum","","","n")
	
	f.Intrinsic.UI.CloseWaitDialog
	gui.Form.gsTime.MainView("gvMain")
	
	gui.Form.dtpDateSelected.Enabled(False)
	gui.Form.cmdOK.Enabled(False)
	gui.Form.chkMondayBegin.Enabled(false)
	gui.Form.cmdExport.Enabled(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}GAB Version: {5}}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdOK_Click.End

Program.Sub.cmdExport_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.iCnt.Declare
	v.Local.fTotalHours.Declare
	v.Local.sFilter.Declare
	v.Local.sRet.Declare
	v.Local.sLines.Declare
	v.Local.iInner.Declare
	v.Local.iWeekDay.Declare
	v.Local.dHold.Declare
	v.Local.fSunday.Declare
	v.Local.fOT.Declare
	v.Local.bSunday.Declare
	v.Local.fHold.Declare
	
	v.Local.dStart.Declare
	v.Local.dEnd.Declare
	
	v.Local.sFile.Declare
	
	v.Local.dStart.Set(v.Screen.Form!dtpStart.Value)
	v.Local.dEnd.Set(v.Screen.Form!dtpEnd.Value)
	v.Local.sHold.Declare
	v.Local.sSunday.Declare
	v.Local.sTotalHours.Declare
	v.Local.sOT.Declare
	
	f.Data.DataView.Create("dtTime","dvTime")
	f.Data.DataView.ToDataTableDistinct("dtTime","dvTime","Employee","Empl*!*Name",True)
	
	v.Local.sLines.Set("Employee,DET,DET Code,Hours")
	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.Employee.RowCount--,1)
		f.Intrinsic.String.Build("Empl = '{0}'",v.DataTable.Employee(v.Local.iCnt).Empl!FieldValString,v.Local.sFilter)
		f.Data.DataTable.Compute("dtTime","sum([Hours_Worked])",v.Local.sFilter,v.Local.sRet)
		f.Intrinsic.String.Format(v.Local.sRet,"######0.00",v.Local.sRet)
		v.Local.fTotalHours.Set(v.Local.sRet)
		v.Local.sTotalHours.Set(v.Local.sRet)
		'Check if more than 40 hours
		f.Intrinsic.Control.If(v.Local.fTotalHours,<=,40)
			f.Intrinsic.String.Build("{0}{1}1{2},1,{3}",v.Local.sLines,v.Ambient.NewLine,v.DataTable.Employee(v.Local.iCnt).Empl!FieldValString,v.Local.sTotalHours,v.Local.sLines)
		f.Intrinsic.Control.Else
			'Check if there is Sunday
			f.Data.DataView.SetFilter("dtTime","dvTime",v.Local.sFilter)
			'Initialize bSunday
			v.Local.bSunday.Set(False)
			v.Local.fSunday.Set(0)
			f.Intrinsic.Control.For(v.Local.iInner,0,v.DataView.dtTime!dvTime.RowCount--,1)
				v.Local.dHold.Set(v.DataView.dtTime!dvTime(v.Local.iInner).Date_Sequence!FieldValString)
				f.Intrinsic.Date.Weekday(v.Local.dHold,v.Local.iWeekDay)
				f.Intrinsic.Control.If(v.Local.iWeekDay,=,1)
					v.Local.fSunday.Set(v.DataView.dtTime!dvTime(v.Local.iInner).Hours_Worked!FieldValString)
					v.Local.bSunday.Set(True)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Next(v.Local.iInner)
			
			'Process if Sunday
			f.Intrinsic.Control.If(v.Local.bSunday)
			
				f.Intrinsic.Math.Sub(v.Local.fTotalHours,v.Local.fSunday,v.Local.fHold)
				f.Intrinsic.Control.If(v.Local.fHold,=,40)
					f.Intrinsic.String.Build("{0}{1}1{2},1,{3}",v.Local.sLines,v.Ambient.NewLine,v.DataTable.Employee(v.Local.iCnt).Empl!FieldValString,40.00,v.Local.sLines)
					f.Intrinsic.String.Format(v.Local.fSunday,"######0.00",v.Local.sSunday)
					f.Intrinsic.String.Build("{0}{1}1{2},3,{3}",v.Local.sLines,v.Ambient.NewLine,v.DataTable.Employee(v.Local.iCnt).Empl!FieldValString,v.Local.sSunday,v.Local.sLines)	
				f.Intrinsic.Control.ElseIf(v.Local.fHold,>,40)
					f.Intrinsic.Math.Sub(v.Local.fHold,40,v.Local.fHold)
					f.Intrinsic.String.Build("{0}{1}1{2},1,{3}",v.Local.sLines,v.Ambient.NewLine,v.DataTable.Employee(v.Local.iCnt).Empl!FieldValString,40.00,v.Local.sLines)
					f.Intrinsic.String.Format(v.Local.fHold,"######0.00",v.Local.shold)
					f.Intrinsic.String.Build("{0}{1}1{2},2,{3}",v.Local.sLines,v.Ambient.NewLine,v.DataTable.Employee(v.Local.iCnt).Empl!FieldValString,v.Local.sHold,v.Local.sLines)
					f.Intrinsic.String.Format(v.Local.fSunday,"######0.00",v.Local.sSunday)
					f.Intrinsic.String.Build("{0}{1}1{2},3,{3}",v.Local.sLines,v.Ambient.NewLine,v.DataTable.Employee(v.Local.iCnt).Empl!FieldValString,v.Local.sSunday,v.Local.sLines)	
				f.Intrinsic.Control.ElseIf(v.Local.fHold,<,40)
				 	f.Intrinsic.Math.Sub(v.Local.fTotalHours,40,v.Local.fHold)
					f.Intrinsic.String.Build("{0}{1}1{2},1,{3}",v.Local.sLines,v.Ambient.NewLine,v.DataTable.Employee(v.Local.iCnt).Empl!FieldValString,40.00,v.Local.sLines)
					f.Intrinsic.String.Format(v.Local.fHold,"######0.00",v.Local.shold)
					f.Intrinsic.String.Build("{0}{1}1{2},3,{3}",v.Local.sLines,v.Ambient.NewLine,v.DataTable.Employee(v.Local.iCnt).Empl!FieldValString,v.Local.sHold,v.Local.sLines)	 	
				f.Intrinsic.Control.EndIf
				
			f.Intrinsic.Control.Else
			
				'No working day is Sunday, so 40 is RT (1) and the rest is overtime (2)
				f.Intrinsic.Math.Sub(v.Local.fTotalHours,40,v.Local.fOT)
				f.Intrinsic.String.Build("{0}{1}1{2},1,{3}",v.Local.sLines,v.Ambient.NewLine,v.DataTable.Employee(v.Local.iCnt).Empl!FieldValString,40.00,v.Local.sLines)
				f.Intrinsic.String.Format(v.Local.fOT,"######0.00",v.Local.sOT)
				f.Intrinsic.String.Build("{0}{1}1{2},2,{3}",v.Local.sLines,v.Ambient.NewLine,v.DataTable.Employee(v.Local.iCnt).Empl!FieldValString,v.Local.sOT,v.Local.sLines)
				
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	f.Intrinsic.String.Build("{0}\{1}_{2}_Export{3}.csv",v.Screen.Form!txtExportFolder.Text.Trim,v.Local.dStart.formatYYYYMMDD,v.Local.dEnd.formatYYYYMMDD,v.Ambient.Now.FormatYYYYMMDDHHNNSS,v.Local.sFile)
	f.Intrinsic.File.String2File(v.Local.sFile,v.Local.sLines)
	f.Intrinsic.String.Build("Exported to {0}",v.Local.sFile,v.Local.sRet)
	f.Intrinsic.UI.Msgbox(v.Local.sRet)
	gui.Form.cmdExport.Enabled(False)
	'f.Intrinsic.Control.CallSub("Unload")

f.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}GAB Version: {5}}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdExport_Click.End
